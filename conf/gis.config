params {
    decont_refpath = '/mnt/genomeDB/genomeIndices/hg19/bwa_index/nucleotide/'
    decont_index   = 'hg19.fa'
    kraken2_index  = '/mnt/genomeDB/misc/softwareDB/kraken2/minikraken2_v2_8GB_201904_UPDATE'
    metaphlan2_refpath = '/mnt/genomeDB/misc/softwareDB/metaphlan2/db_v20/'
    metaphlan2_index   = 'mpa_v20_m200'
    metaphlan2_pkl     = 'mpa_v20_m200.pkl'
    humann2_nucleotide = '/mnt/genomeDB/misc/softwareDB/humann2/chocophlan/'
    humann2_protein    = '/mnt/genomeDB/misc/softwareDB/humann2/uniref/'
}


process {
    executor = 'sge'
    clusterOptions = { '-V' }
    penv = 'OpenMP' // task.cpus = automagically added
    maxRetries = 3
    errorStrategy = { task.attempt < 2 ? 'retry' : 'finish' }
    //TODO: find a cleaner way to code this? This is potentially solved by PS:
    // https://github.com/nextflow-io/nextflow/pull/1324/commits/bf0a30b3e6111cd82557803d027dfc0244b20208
    withName:"DECONT" {
        beforeScript = { ". /mnt/software/unstowable/miniconda3-4.6.14/etc/profile.d/conda.sh; conda activate shotgunMetagenomics_fastp_v0.20.0 " }
    }
    withName:"KRAKEN2|BRACKEN" {
        beforeScript = { ". /mnt/software/unstowable/miniconda3-4.6.14/etc/profile.d/conda.sh; conda activate shotgunMetagenomics_kraken_v2.0.8 " }
    }
    withName:"METAPHLAN2" {
        beforeScript = { ". /mnt/software/unstowable/miniconda3-4.6.14/etc/profile.d/conda.sh; conda activate shotgunMetagenomics_metaphlan2_v2.7.7 " }
    }
    withName:"HUMANN2*" {
        beforeScript = { ". /mnt/software/unstowable/miniconda3-4.6.14/etc/profile.d/conda.sh; conda activate shotgunMetagenomics_humann_v2.9 " }
    }
    withName:"SPLIT_.*" {
	executor = 'local'
        time = { check_max( 1.h * task.attempt, 'time') }
	cpus = 1
    }    
    pollInterval = '30 sec'
    exitReadTimeout = "120 sec"
}

	 
/*
// GIS environments
shotgunMetagenomics_fastp_v0.20.0 
shotgunMetagenomics_humann_v2.9   
shotgunMetagenomics_kraken_v2.0.8 
shotgunMetagenomics_metaphlan_v2.9
*/